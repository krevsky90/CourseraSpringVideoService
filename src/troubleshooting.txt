Troubleshooting:
1) PROBLEM:
    2023-09-17T19:19:54.232+03:00 ERROR 18316 --- [nio-8080-exec-1] o.a.c.c.C.[.[.[/].[dispatcherServlet]    :
    Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [
        Request processing failed: java.lang.IllegalArgumentException: Unknown return value type: java.lang.Boolean]
    with root cause
   java.lang.IllegalArgumentException: Unknown return value type: java.lang.Boolean
   	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:76) ~[spring-web-6.0.11.jar:6.0.11]
   	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136) ~[spring-webmvc-6.0.11.jar:6.0.11]
   	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:884) ~[spring-webmvc-6.0.11.jar:6.0.11]
   	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:797) ~[spring-webmvc-6.0.11.jar:6.0.11]
   	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.0.11.jar:6.0.11]
   	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1081) ~[spring-webmvc-6.0.11.jar:6.0.11]
   	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:974) ~[spring-webmvc-6.0.11.jar:6.0.11]
   	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1011) ~[spring-webmvc-6.0.11.jar:6.0.11]
   	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.0.11.jar:6.0.11]
   	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.12.jar:6.0]
   	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.0.11.jar:6.0.11]
   	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.12.jar:6.0]

   SOLUTION:
    Add @ResponseBody annotation to ALL methods of VideoControlle class
    OR use @RestController annotation. Since @RestController = @Controller + @ResponseBody
        => @ResponseBody will be applied to all methods of this class

2) PROBLEM:
    jpa entity is not a managed type

   SOLUTION: https://stackoverflow.com/questions/28664064/spring-boot-not-a-managed-type
    In the recent version of Springboot and JDK, this error is a result of the "Javax" namespace used in Java EE being replaced with the "Jakarta" namespace in Jakarta EE.

3) PROBLEM:
    if I start SpringBoot application, then I can't open VIDEO table via 'Database' tab or perform any queries to it using h2 console.
    The error is:
    [2023-09-19 18:23:20] [90020][90020] Database may be already in use: null. Possible solutions: close all other connection(s); use the server mode [90020-210]
    [2023-09-19 18:23:20] The file is locked: C:/Grisha/JavaProjects/Coursera/cloud-services-java-spring-framework/krevsky/VideoService_week4/h2_test_db.mv.db [2.1.210/7]
   SOLUTION:
    https://stackoverflow.com/questions/9318116/how-to-run-h2-database-in-server-mode
    I took the idea "to add AUTO_SERVER=TRUE to url of DB properties in application.properties"

    NOTE: after that I went to 'Database' tab and recreated Datasource using option 'DataSource from URL'.
        Now I can change DB via REST requests and look at VIDEO table in DB directly by select-queries
===================
4) PROBLEM:
    after start the application the error is:
        org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'handlerExceptionResolver' defined in org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: Failed to instantiate [org.springframework.web.servlet.HandlerExceptionResolver]: Factory method 'handlerExceptionResolver' threw exception with message: Error creating bean with name 'selfLinkProvider' defined in krevsky.coursera.videoservice.VideoServiceApplication: Unsatisfied dependency expressed through method 'selfLinkProvider' parameter 1: Error creating bean with name 'entityLinks' defined in krevsky.coursera.videoservice.VideoServiceApplication: Unsatisfied dependency expressed through method 'entityLinks' parameter 2: Error creating bean with name 'resourceMappings' defined in krevsky.coursera.videoservice.VideoServiceApplication: Failed to instantiate [org.springframework.data.rest.core.mapping.RepositoryResourceMappings]: Factory method 'resourceMappings' threw exception with message: Path /video configured for krevsky.coursera.videoservice.repositories.VideoRepository must only contain a single path segment
   SOLUTION:
    https://stackoverflow.com/questions/58830824/repositoryrestresource-did-not-work-spring-boot-2-2-1-release-while-running-oc
    to remove "/" from the beginning of the path. i.e. go to VideoRepository interface and replace
        @RepositoryRestResource(..., path = "/video")
    with
        @RepositoryRestResource(..., path = "video")

5) PROBLEM:
    after start the application the error is:
        org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'restHandlerMapping' defined in krevsky.coursera.videoservice.VideoServiceApplication: Failed to instantiate [org.springframework.data.rest.webmvc.config.DelegatingHandlerMapping]: Factory method 'restHandlerMapping' threw exception with message: failed to access class org.springframework.data.rest.webmvc.config.DelegatingHandlerMapping from class krevsky.coursera.videoservice.VideoServiceApplication$$SpringCGLIB$$0 (org.springframework.data.rest.webmvc.config.DelegatingHandlerMapping and krevsky.coursera.videoservice.VideoServiceApplication$$SpringCGLIB$$0 are in unnamed module of loader 'app')
   SOLUTION:
    https://github.com/spring-projects/spring-data-rest/issues/1981
    i.e. it's better to add @Import({RepositoryRestMvcConfiguration.class}) instead of extension of RepositoryRestMvcConfiguration